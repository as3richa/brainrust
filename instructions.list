add BYTE [rbx+r8], $u8
add r15, rax
add r8, $i32
add r8, $i8
add r8, r9
add rsi, r15
cmovae r8, r15
cmp BYTE [rbx+r8], $u8
cmp r10, r11
cmp r10, r12
cmp r13, $u32
cmp r13, rbp
cmp r15b, $u8
cmp r15, r13
cmp rax, $u32
dec BYTE [rbx+r8]
inc BYTE [rbx+r8]
inc r10
inc r13
je $label
jg $label 
jge $label
jmp $label
jne $label
jns $label
mov BYTE [rbx+r8], r15b
mov BYTE [rsp+r13], r15b
mov r11, rax
mov r12, $u64
mov r12, rax
mov r13, $u32
mov r14, $addr
mov r15b, BYTE [r14+r10]
mov r15b, BYTE [rbx+r8]
mov r15, r8
mov r9, $u64
mov rax, $u32
mov rbp, $u64
mov rbx, $addr
mov rdi, $u32
mov rdx, $u32
mov rdx, r12
mov rdx, r13
mov rsi, r14
mov rsi, rsp
mov rsp, $addr
sub r15, r9
sub r8, r9
sub rdx, r15
syscall
xor r10, r10
xor r11, r11
xor r12, r12
xor r13, r13
xor r15, r15
xor r8, r8
xor rax, rax
xor rdi, rdi
